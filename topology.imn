node n1 {
    type router
    model host
    network-config {
	hostname n1
	!
	interface eth0
	 ip address 10.0.0.10/24
	!
    }
    canvas c1
    iconcoords {62.0 118.0}
    labelcoords {62.0 150.0}
    interface-peer {eth0 n2}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.0.11
	
	}
    }
    services {DefaultRoute}
}

node n2 {
    type router
    model host
    network-config {
	hostname n2
	!
	interface eth1
	 ip address 10.0.1.10/24
	!
	interface eth0
	 ip address 10.0.0.11/24
	!
    }
    canvas c1
    iconcoords {362.0 118.0}
    labelcoords {362.0 150.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n3}
    services {IPForward}
}

node n3 {
    type router
    model host
    network-config {
	hostname n3
	!
	interface eth0
	 ip address 10.0.1.11/24
	!
    }
    canvas c1
    iconcoords {710.0 119.0}
    labelcoords {710.0 151.0}
    interface-peer {eth0 n2}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.10
	
	}
    }
    services {DefaultRoute}
}

link l1 {
    nodes {n1 n2}
    bandwidth 0
}

link l2 {
    nodes {n2 n3}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names yes
    ip_addresses yes
    ipv6_addresses no
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

