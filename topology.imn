node n1 {
    type router
    model host
    network-config {
	hostname n1
	!
	interface eth0
	 ip address 10.0.0.10/24
	 mac address 00:00:00:aa:00:00
	!
    }
    canvas c1
    iconcoords {64.5 36.5}
    labelcoords {64.5 68.5}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.0.11
	
	}
    }
    services {DefaultRoute}
    interface-peer {eth0 n4}
}

node n2 {
    type router
    model router
    network-config {
	hostname n2
	!
	interface eth0
	 ip address 10.0.0.11/24
	 mac address 00:00:00:aa:00:01
	!
	interface eth1
	 ip address 10.0.1.10/24
	 mac address 00:00:00:aa:00:02
	!
    }
    canvas c1
    iconcoords {436.0 74.33333333333331}
    labelcoords {436.0 106.33333333333334}
    interface-peer {eth1 n3}
    services {UserDefined}
    interface-peer {eth0 n4}
    custom-config {
	custom-config-id service:NAT
	custom-command NAT
	config {
	files=('nat.sh', )
	}
    }
    custom-config {
	custom-config-id service:NAT:nat.sh
	custom-command nat.sh
	config {
	#!/bin/sh
	# generated by security.py
	# NAT out the first interface by default
	# NAT out the eth1 interface
	iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE
	iptables -A FORWARD -i eth1 -m state --state RELATED,ESTABLISHED -j ACCEPT
	iptables -A FORWARD -i eth1 -j DROP
	
	# iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
	# iptables -A FORWARD -i eth0 -m state --state RELATED,ESTABLISHED -j ACCEPT
	# iptables -A FORWARD -i eth0 -j DROP
	
	}
    }
}

node n3 {
    type router
    model host
    network-config {
	hostname n3
	!
	interface eth0
	 ip address 10.0.1.11/24
	 mac address 00:00:00:aa:00:03
	!
    }
    canvas c1
    iconcoords {677.0 72.66666666666667}
    labelcoords {677.0 104.66666666666666}
    interface-peer {eth0 n2}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.10
	
	}
    }
    services {DefaultRoute}
}

node n4 {
    type lanswitch
    network-config {
	hostname n4
	!
    }
    canvas c1
    iconcoords {223.75 74.0}
    labelcoords {223.75 98.0}
    interface-peer {e0 n1}
    interface-peer {e1 n2}
    interface-peer {e2 n5}
}

node n5 {
    type router
    model host
    network-config {
	hostname n5
	!
	interface eth0
	 ip address 10.0.0.12/24
	 mac address 00:00:00:aa:00:04
	!
    }
    canvas c1
    iconcoords {66.0 121.0}
    labelcoords {66.0 153.0}
    interface-peer {eth0 n4}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.0.11
	
	}
    }
    services {DefaultRoute}
}

link l2 {
    nodes {n2 n3}
    bandwidth 0
}

link l1 {
    nodes {n1 n4}
    bandwidth 0
}

link l3 {
    nodes {n4 n2}
    bandwidth 0
}

link l4 {
    nodes {n5 n4}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names yes
    ip_addresses yes
    ipv6_addresses no
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

